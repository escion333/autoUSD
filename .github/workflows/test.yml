name: Test Suite

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

env:
  FOUNDRY_PROFILE: ci

jobs:
  check:
    strategy:
      fail-fast: true

    name: Foundry project
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: nightly

      - name: Show Foundry config
        run: forge config

      - name: Run forge fmt --check
        run: forge fmt --check

      - name: Build contracts
        run: forge build --sizes

      - name: Run unit tests
        run: forge test --match-path "test/unit/*" -vvv

      - name: Run integration tests
        run: forge test --match-path "test/integration/*" -vvv

      - name: Generate gas snapshots
        run: forge snapshot --check

      - name: Run coverage
        run: |
          forge coverage --report lcov
          # Filter out test files and mock contracts from coverage
          lcov --remove lcov.info 'test/*' 'contracts/mocks/*' --output-file lcov.info

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
        with:
          files: ./lcov.info
          flags: smart-contracts
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  security:
    name: Security Analysis
    runs-on: ubuntu-latest
    needs: check
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1

      - name: Install Slither
        run: pip3 install slither-analyzer

      - name: Run Slither
        run: slither . --config-file slither.config.json || true

      - name: Run Mythril (if available)
        run: |
          if command -v myth &> /dev/null; then
            echo "Running Mythril analysis..."
            myth analyze contracts/MotherVault.sol --solv 0.8.23 || true
          else
            echo "Mythril not available, skipping..."
          fi

  validate-deployment-configs:
    name: Validate Deployment Configurations
    runs-on: ubuntu-latest
    needs: check
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1

      - name: Check deployment script compilation
        run: |
          forge build --match-path "script/deploy/*"

      - name: Validate environment examples
        run: |
          # Check that all required variables are in .env.example
          echo "Validating .env.example completeness..."
          
          # Extract required environment variables from deployment scripts
          grep -r "vm\.env" script/deploy/ | grep -o "vm\.env[A-Za-z]*(\s*\"[^\"]*\"" | \
            sed 's/vm\.env[A-Za-z]*(\s*"//' | sort -u > required_vars.txt
          
          # Check if all required vars are in .env.example
          while read -r var; do
            if ! grep -q "^${var}=" .env.example; then
              echo "❌ Missing required variable in .env.example: $var"
              exit 1
            else
              echo "✅ Found $var in .env.example"
            fi
          done < required_vars.txt
          
          echo "All required environment variables found in .env.example"

      - name: Test environment validation script
        run: |
          # Create a test environment with mock values
          cat > .env.test << EOF
          PRIVATE_KEY=0xac0974bec39a17e36ba4a6b4d238ff944bacb478cbed5efcae784d7bf4f2ff80
          USDC_ADDRESS=0x036CbD53842c5426634e7929541eC2318f3dCF7e
          HYPERLANE_MAILBOX=0x0000000000000000000000000000000000000001
          CCTP_TOKEN_MESSENGER=0x0000000000000000000000000000000000000002
          CCTP_MESSAGE_TRANSMITTER=0x0000000000000000000000000000000000000003
          INTERCHAIN_GAS_PAYMASTER=0x0000000000000000000000000000000000000004
          BASE_DOMAIN=1
          KATANA_DOMAIN=2
          ZIRCUIT_DOMAIN=3
          DEPOSIT_CAP=100000000
          MANAGEMENT_FEE=50
          PERFORMANCE_FEE=1000
          REBALANCE_THRESHOLD=500
          BASESCAN_API_KEY=test_key
          ETHERSCAN_API_KEY=test_key
          EOF
          
          # Test compilation of validation script (can't run without actual network)
          forge script script/deploy/ValidateEnvironment.s.sol --env-file .env.test --parse